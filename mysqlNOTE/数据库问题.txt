问题及描述：
--1.学生表
Student(Ssum,Sname,Sage,Ssex) --Snum 学生编号,Sname 学生姓名,Sage 出生年月,Ssex 学生性别
--2.课程表 
Course(Cnum,Cname,Tnum) --Cnum --课程编号,Cname 课程名称,Tnum 教师编号
--3.教师表 
Teacher(Tnum,Tname) --Tnum 教师编号,Tname 教师姓名
--4.成绩表 
SC(Snum,Cnum,score) --Snum 学生编号,Cnum 课程编号,score 分数
*/
--创建测试数据

create table Student(Snum varchar(10),Sname nvarchar(10),Sage datetime,Ssex nvarchar(10));
insert into Student values('01' , N'赵雷' , '1990-01-01' , N'男');
insert into Student values('02' , N'钱电' , '1990-12-21' , N'男');
insert into Student values('03' , N'孙风' , '1990-05-20' , N'男');
insert into Student values('04' , N'李云' , '1990-08-06' , N'男');
insert into Student values('05' , N'周梅' , '1991-12-01' , N'女');
insert into Student values('06' , N'吴兰' , '1992-03-01' , N'女');
insert into Student values('07' , N'郑竹' , '1989-07-01' , N'女');
insert into Student values('08' , N'王菊' , '1990-01-20' , N'女');
create table Course(Cnum varchar(10),Cname nvarchar(10),Tnum varchar(10));
insert into Course values('01' , N'语文' , '02');
insert into Course values('02' , N'数学' , '01');
insert into Course values('03' , N'英语' , '03');
create table Teacher(Tnum varchar(10),Tname nvarchar(10));
insert into Teacher values('01' , N'张三');
insert into Teacher values('02' , N'李四');
insert into Teacher values('03' , N'王五');
create table SC(Snum varchar(10),Cnum varchar(10),score decimal(18,1));
insert into SC values('01' , '01' , 80);
insert into SC values('01' , '02' , 90);
insert into SC values('01' , '03' , 99);
insert into SC values('02' , '01' , 70);
insert into SC values('02' , '02' , 60);
insert into SC values('02' , '03' , 80);
insert into SC values('03' , '01' , 80);
insert into SC values('03' , '02' , 80);
insert into SC values('03' , '03' , 80);
insert into SC values('04' , '01' , 50);
insert into SC values('04' , '02' , 30);
insert into SC values('04' , '03' , 20);
insert into SC values('05' , '01' , 76);
insert into SC values('05' , '02' , 87);
insert into SC values('06' , '01' , 31);
insert into SC values('06' , '03' , 34);
insert into SC values('07' , '02' , 89);
insert into SC values('07' , '03' , 98);
insert into SC values('09' , '03' , 98);





#1、查询"01"课程比"02"课程成绩高的学生的信息及课程分数
#1.1、查询同时存在"01"课程和"02"课程的情况

#1.2、存在"01"课程但可能不存在"02"课程的情况(不存在时显示为null)(以下存在相同内容时不再解释)


#2、查询"01"课程比"02"课程成绩低的学生的信息及课程分数
#2.1、查询同时存在"01"课程和"02"课程的情况

#2.2、查询同时存在"01"课程和"02"课程的情况和不存在"01"课程但存在"02"课程的情况


#3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩


#4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩
#4.1、查询在sc表存在成绩的学生信息的SQL语句。

#4.2、查询在sc表中不存在成绩的学生信息的SQL语句。


#5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩
#5.1、查询所有有成绩的SQL。

#5.2、查询所有(包括有成绩和无成绩)的SQL。


#6、查询"李"姓老师的数量 



#7、查询学过"张三"老师授课的同学的信息 


#8、查询没学过"张三"老师授课的同学的信息 


#9、查询学过编号为"01"并且也学过编号为"02"的课程的同学的信息


#10、查询学过编号为"01"但是没有学过编号为"02"的课程的同学的信息


#11、查询没有学全所有课程的同学的信息 


#12、查询至少有一门课与学号为"01"的同学所学相同的同学的信息 



#13、查询和"01"号的同学学习的课程完全相同的其他同学的信息 XX


#14、查询没学过"张三"老师讲授的任一门课程的学生姓名 



#15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 



#16、检索"01"课程分数小于60，按分数降序排列的学生信息


#17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩


#18、查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率
#及格为>=60，中等为：70-80，优良为：80-90，优秀为：>=90


#19、按各科成绩进行排序，并显示排名


#20、查询学生的总成绩并进行排名
#20.1 查询学生的总成绩




#20.2 查询学生的总成绩并进行排名，分总分重复时保留名次空缺和不保留名次空缺两种。


#21、查询不同老师所教不同课程平均分从高到低显示 


#22、查询所有课程的成绩第2名到第3名的学生信息及该课程成绩




#23、查询学生平均成绩及其名次 


#24查询学生的平均成绩并进行排名.

  
#25、查询各科成绩前三名的记录
#25.1 分数重复时保留名次空缺

#25.2 分数重复时不保留名次空缺，合并名次


#26、查询每门课程被选修的学生数 


#27、查询出只有两门课程的全部学生的学号和姓名 

 
#28、查询男生、女生人数 


#29、查询名字中含有"风"字的学生信息


#30、查询同名同性学生名单，并统计同名人数 

 
#31、查询1990年出生的学生名单(注：Student表中Sage列的类型是datetime) 


#32、查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列 


#33、查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩 


#34、查询课程名称为"数学"，且分数低于60的学生姓名和分数 


#35、查询所有学生的课程及分数情况； 


#36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数； 


#37、查询不及格的课程


#38、查询课程编号为01且课程成绩在80分以上的学生的学号和姓名； 


#39、求每门课程的学生人数 


#40、查询选修"张三"老师所授课程的学生中，成绩最高的学生信息及其成绩



#41、查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩 


#42、查询每门功成绩最好的前两名 

#43、统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列  


#44、检索至少选修两门课程的学生学号 


#45、查询选修了全部课程的学生信息 


#46、查询各学生的年龄
#46.1 只按照年份来算

#46.2 按照出生日期来算，当前月日 < 出生年月的月日则，年龄减一

#47、查询本周过生日的学生

#48、查询下周过生日的学生

#49、查询本月过生日的学生

#50、查询下月过生日的学生


